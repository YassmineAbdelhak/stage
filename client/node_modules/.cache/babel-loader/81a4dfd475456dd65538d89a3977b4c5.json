{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chayma\\\\Desktop\\\\my-app\\\\client\\\\src\\\\components\\\\EditProduct\\\\EditProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getProductById, updateProduct } from \"../../actions/productAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Error from \"../Error/Error\";\nimport Loader from \"../Loader/Loader\";\nimport Success from \"../Success/Success\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProduct({\n  match\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const productstate = useSelector(state => state.getProductByIdReducer);\n  const {\n    product,\n    loading,\n    error\n  } = productstate;\n  const updateproductstate = useSelector(state => state.updateProductReducer);\n  const {\n    success,\n    updateerror,\n    updateloading\n  } = updateproductstate;\n  const [name, setname] = useState(\"\");\n  const [price, setprice] = useState();\n  const [countinstock, setcountinstock] = useState();\n  const [imgurl, setimgurl] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [unit, setunit] = useState(\"\");\n  useEffect(() => {\n    if (product) {\n      if (product._id == match.params.productid) {\n        setname(product.name);\n        setprice(product.price);\n        setcountinstock(product.countInStock);\n        setimgurl(product.imgurl);\n        setcategory(product.category);\n        setdescription(product.description);\n        setunit(product.unit);\n      } else {\n        dispatch(getProductById(match.params.productid));\n      }\n    } else {\n      dispatch(getProductById(match.params.productid));\n    }\n  }, [dispatch, product]);\n\n  function editproduct(e) {\n    e.preventDefault();\n    const updatedproduct = {\n      name: name,\n      price: price,\n      unit: unit,\n      countInStock: countinstock,\n      imgurl: imgurl,\n      description: description,\n      category: category\n    };\n    dispatch(updateProduct(match.params.productid, updatedproduct));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"usertitle\",\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), updateloading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this), updateerror && /*#__PURE__*/_jsxDEV(Error, {\n      error: \"Something wrong!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      error: \"Something wrong!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Success, {\n      success: \"Product Updated Seccessfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), product && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: editproduct,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mb-2 mr-sm-2\",\n            placeholder: \"Name ...\",\n            required: true,\n            value: name,\n            onChange: e => {\n              setname(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control mb-2 mr-sm-2\",\n            placeholder: \"Price ...\",\n            required: true,\n            value: price,\n            onChange: e => {\n              setprice(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mb-2 mr-sm-2\",\n            placeholder: \"Unit ...\",\n            required: true,\n            value: unit,\n            onChange: e => {\n              setunit(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control mb-2 mr-sm-2\",\n            placeholder: \"Stock ...\",\n            required: true,\n            value: countinstock,\n            onChange: e => {\n              setcountinstock(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mb-2 mr-sm-2\",\n            placeholder: \"Image URL ...\",\n            required: true,\n            value: imgurl,\n            onChange: e => {\n              setimgurl(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mb-2 mr-sm-2\",\n            placeholder: \"Decription ...\",\n            required: true,\n            value: description,\n            onChange: e => {\n              setdescription(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mb-2 mr-sm-2\",\n            placeholder: \"Category ...\",\n            required: true,\n            value: category,\n            onChange: e => {\n              setcategory(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn mt-2\",\n            type: \"submit\",\n            style: {\n              color: \"white\",\n              backgroundColor: \"#343a40\",\n              width: \"200px\"\n            },\n            children: \"Update Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProduct, \"P9ZTYsUmpuhJfKmWQAVnyQDItdc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProduct;\nexport default EditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"sources":["C:/Users/Chayma/Desktop/my-app/client/src/components/EditProduct/EditProduct.jsx"],"names":["React","useEffect","useState","getProductById","updateProduct","useDispatch","useSelector","Error","Loader","Success","EditProduct","match","dispatch","productstate","state","getProductByIdReducer","product","loading","error","updateproductstate","updateProductReducer","success","updateerror","updateloading","name","setname","price","setprice","countinstock","setcountinstock","imgurl","setimgurl","category","setcategory","description","setdescription","unit","setunit","_id","params","productid","countInStock","editproduct","e","preventDefault","updatedproduct","target","value","color","backgroundColor","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,6BAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAgC;AAAA;;AAC9B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,YAAY,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,qBAAlB,CAAhC;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BL,YAApC;AAEA,QAAMM,kBAAkB,GAAGb,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACM,oBAAlB,CAAtC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAA0CJ,kBAAhD;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,EAAlC;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,EAAhD;AACA,QAAM,CAAC4B,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkC,IAAD,EAAOC,OAAP,IAAkBnC,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,OAAJ,EAAa;AACX,UAAIA,OAAO,CAACsB,GAAR,IAAe3B,KAAK,CAAC4B,MAAN,CAAaC,SAAhC,EAA2C;AACzCf,QAAAA,OAAO,CAACT,OAAO,CAACQ,IAAT,CAAP;AACAG,QAAAA,QAAQ,CAACX,OAAO,CAACU,KAAT,CAAR;AACAG,QAAAA,eAAe,CAACb,OAAO,CAACyB,YAAT,CAAf;AACAV,QAAAA,SAAS,CAACf,OAAO,CAACc,MAAT,CAAT;AACAG,QAAAA,WAAW,CAACjB,OAAO,CAACgB,QAAT,CAAX;AACAG,QAAAA,cAAc,CAACnB,OAAO,CAACkB,WAAT,CAAd;AACAG,QAAAA,OAAO,CAACrB,OAAO,CAACoB,IAAT,CAAP;AACD,OARD,MAQO;AACLxB,QAAAA,QAAQ,CAACT,cAAc,CAACQ,KAAK,CAAC4B,MAAN,CAAaC,SAAd,CAAf,CAAR;AACD;AACF,KAZD,MAYO;AACL5B,MAAAA,QAAQ,CAACT,cAAc,CAACQ,KAAK,CAAC4B,MAAN,CAAaC,SAAd,CAAf,CAAR;AACD;AACF,GAhBQ,EAgBN,CAAC5B,QAAD,EAAWI,OAAX,CAhBM,CAAT;;AAkBA,WAAS0B,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,cAAc,GAAG;AACrBrB,MAAAA,IAAI,EAAEA,IADe;AAErBE,MAAAA,KAAK,EAAEA,KAFc;AAGrBU,MAAAA,IAAI,EAAEA,IAHe;AAIrBK,MAAAA,YAAY,EAAEb,YAJO;AAKrBE,MAAAA,MAAM,EAAEA,MALa;AAMrBI,MAAAA,WAAW,EAAEA,WANQ;AAOrBF,MAAAA,QAAQ,EAAEA;AAPW,KAAvB;AAUApB,IAAAA,QAAQ,CAACR,aAAa,CAACO,KAAK,CAAC4B,MAAN,CAAaC,SAAd,EAAyBK,cAAzB,CAAd,CAAR;AACD;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG5B,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFd,EAGGM,aAAa,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHpB,EAIGD,WAAW,iBAAI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAJlB,EAKGJ,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YALZ,EAMGG,OAAO,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YANd,EAQGL,OAAO,iBACN;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAE0B,WAAhB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,WAAW,EAAC,UAHd;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAElB,IALT;AAME,YAAA,QAAQ,EAAGmB,CAAD,IAAO;AACflB,cAAAA,OAAO,CAACkB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACD;AARH;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,WAAW,EAAC,WAHd;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAErB,KALT;AAME,YAAA,QAAQ,EAAGiB,CAAD,IAAO;AACfhB,cAAAA,QAAQ,CAACgB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD;AARH;AAAA;AAAA;AAAA;AAAA,kBAXF,eAqBE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,WAAW,EAAC,UAHd;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAEX,IALT;AAME,YAAA,QAAQ,EAAGO,CAAD,IAAO;AACfN,cAAAA,OAAO,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACD;AARH;AAAA;AAAA;AAAA;AAAA,kBArBF,eAgCE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,WAAW,EAAC,WAHd;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAEnB,YALT;AAME,YAAA,QAAQ,EAAGe,CAAD,IAAO;AACfd,cAAAA,eAAe,CAACc,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AACD;AARH;AAAA;AAAA;AAAA;AAAA,kBAhCF,eA0CE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,WAAW,EAAC,eAHd;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAEjB,MALT;AAME,YAAA,QAAQ,EAAGa,CAAD,IAAO;AACfZ,cAAAA,SAAS,CAACY,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT;AACD;AARH;AAAA;AAAA;AAAA;AAAA,kBA1CF,eAoDE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,WAAW,EAAC,gBAHd;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAEb,WALT;AAME,YAAA,QAAQ,EAAGS,CAAD,IAAO;AACfR,cAAAA,cAAc,CAACQ,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd;AACD;AARH;AAAA;AAAA;AAAA;AAAA,kBApDF,eA+DE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,2BAFZ;AAGE,YAAA,WAAW,EAAC,cAHd;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAEf,QALT;AAME,YAAA,QAAQ,EAAGW,CAAD,IAAO;AACfV,cAAAA,WAAW,CAACU,CAAC,CAACG,MAAF,CAASC,KAAV,CAAX;AACD;AARH;AAAA;AAAA;AAAA;AAAA,kBA/DF,eA0EE;AACE,YAAA,SAAS,EAAC,UADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAE;AACLC,cAAAA,KAAK,EAAE,OADF;AAELC,cAAAA,eAAe,EAAE,SAFZ;AAGLC,cAAAA,KAAK,EAAE;AAHF,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuGD;;GA1JQxC,W;UACUL,W,EAEIC,W,EAIMA,W;;;KAPpBI,W;AA4JT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getProductById, updateProduct } from \"../../actions/productAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Error from \"../Error/Error\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Success from \"../Success/Success\";\r\n\r\nfunction EditProduct({ match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const productstate = useSelector((state) => state.getProductByIdReducer);\r\n\r\n  const { product, loading, error } = productstate;\r\n\r\n  const updateproductstate = useSelector((state) => state.updateProductReducer);\r\n  const { success, updateerror, updateloading } = updateproductstate;\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [price, setprice] = useState();\r\n  const [countinstock, setcountinstock] = useState();\r\n  const [imgurl, setimgurl] = useState(\"\");\r\n  const [category, setcategory] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [unit, setunit] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (product) {\r\n      if (product._id == match.params.productid) {\r\n        setname(product.name);\r\n        setprice(product.price);\r\n        setcountinstock(product.countInStock);\r\n        setimgurl(product.imgurl);\r\n        setcategory(product.category);\r\n        setdescription(product.description);\r\n        setunit(product.unit);\r\n      } else {\r\n        dispatch(getProductById(match.params.productid));\r\n      }\r\n    } else {\r\n      dispatch(getProductById(match.params.productid));\r\n    }\r\n  }, [dispatch, product]);\r\n\r\n  function editproduct(e) {\r\n    e.preventDefault();\r\n    const updatedproduct = {\r\n      name: name,\r\n      price: price,\r\n      unit: unit,\r\n      countInStock: countinstock,\r\n      imgurl: imgurl,\r\n      description: description,\r\n      category: category,\r\n    };\r\n\r\n    dispatch(updateProduct(match.params.productid, updatedproduct));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"usertitle\">Update Product</h2>\r\n      {loading && <Loader />}\r\n      {updateloading && <Loader />}\r\n      {updateerror && <Error error=\"Something wrong!\" />}\r\n      {error && <Error error=\"Something wrong!\" />}\r\n      {success && <Success success=\"Product Updated Seccessfully\" />}\r\n\r\n      {product && (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <form onSubmit={editproduct}>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"Name ...\"\r\n                required\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setname(e.target.value);\r\n                }}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"Price ...\"\r\n                required\r\n                value={price}\r\n                onChange={(e) => {\r\n                  setprice(e.target.value);\r\n                }}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"Unit ...\"\r\n                required\r\n                value={unit}\r\n                onChange={(e) => {\r\n                  setunit(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"Stock ...\"\r\n                required\r\n                value={countinstock}\r\n                onChange={(e) => {\r\n                  setcountinstock(e.target.value);\r\n                }}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"Image URL ...\"\r\n                required\r\n                value={imgurl}\r\n                onChange={(e) => {\r\n                  setimgurl(e.target.value);\r\n                }}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"Decription ...\"\r\n                required\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setdescription(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-2 mr-sm-2\"\r\n                placeholder=\"Category ...\"\r\n                required\r\n                value={category}\r\n                onChange={(e) => {\r\n                  setcategory(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <button\r\n                className=\"btn mt-2\"\r\n                type=\"submit\"\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: \"#343a40\",\r\n                  width: \"200px\",\r\n                }}\r\n              >\r\n                Update Product\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProduct;\r\n"]},"metadata":{},"sourceType":"module"}
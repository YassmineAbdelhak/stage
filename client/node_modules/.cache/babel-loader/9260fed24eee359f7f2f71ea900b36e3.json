{"ast":null,"code":"import { getAllProductsReducer, getProductByIdReducer, addProductReviewReducer, deleteProductReducer, addProductReducer, updateProductReducer } from \"../reducers/productReducer\";\n{\n  /*import { cartReducer } from \"../reducers/cartReducer\"\r\n  import { registerNewUserReducer, loginReducer, getAllUsersReducer, deleteUserReducer } from \"../reducers/userReducer\";\r\n  import { getOrdersByUserIdReducer, placeOrderReducer, getAllOrdersReducer } from \"../reducers/orderReducer\" */\n} //import rootReducer from \"../reducers/rootReducer\"\n\nconst finalReducer = combineReducers({\n  getAllProductsReducer: getAllProductsReducer,\n  getProductByIdReducer: getProductByIdReducer,\n  // cartReducer : cartReducer,\n  //registerNewUserReducer : registerNewUserReducer,\n  //loginReducer : loginReducer,\n  //placeOrderReducer : placeOrderReducer,\n  //getOrdersByUserIdReducer : getOrdersByUserIdReducer,\n  //addProductReviewReducer : addProductReviewReducer,\n  //getAllUsersReducer : getAllUsersReducer,\n  //deleteUserReducer : deleteUserReducer,\n  deleteProductReducer: deleteProductReducer,\n  addProductReducer: addProductReducer,\n  updateProductReducer: updateProductReducer //getAllOrdersReducer : getAllOrdersReducer\n\n});\n{\n  /*const cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n  const currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null */\n}\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === \"developement\") {\n  middleware.push(logger);\n}\n\n{\n  /*const initialState = {\r\n   cartReducer: {cartItems : cartItems},\r\n   loginReducer : { currentUser : currentUser} \r\n  }\r\n  \n  const composeEnhancers = composeWithDevTools({\r\n   // Specify here name, actionsBlacklist, actionsCreators and other options\r\n  });*/\n}\nconst store = createStore(finalReducer, applyMiddleware(...middleware));\nexport default store;","map":{"version":3,"sources":["C:/flask/New folder/my-app/client/src/store/store.js"],"names":["getAllProductsReducer","getProductByIdReducer","addProductReviewReducer","deleteProductReducer","addProductReducer","updateProductReducer","finalReducer","combineReducers","middleware","thunk","process","env","NODE_ENV","push","logger","store","createStore","applyMiddleware"],"mappings":"AACA,SAASA,qBAAT,EAAgCC,qBAAhC,EAAuDC,uBAAvD,EAAgFC,oBAAhF,EAAsGC,iBAAtG,EAAyHC,oBAAzH,QAAqJ,4BAArJ;AACA;AAAC;AACD;AACA;AAA+G,C,CAC/G;;AAGA,MAAMC,YAAY,GAAGC,eAAe,CAAC;AACnCP,EAAAA,qBAAqB,EAAEA,qBADY;AAEnCC,EAAAA,qBAAqB,EAAEA,qBAFY;AAGpC;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,EAAAA,oBAAoB,EAAGA,oBAXY;AAYnCC,EAAAA,iBAAiB,EAAGA,iBAZe;AAanCC,EAAAA,oBAAoB,EAAGA,oBAbY,CAcnC;;AAdmC,CAAD,CAApC;AAiBA;AAAE;AACF;AAAoH;AAEpH,MAAMG,UAAU,GAAG,CAACC,KAAD,CAAnB;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,cAA7B,EAA4C;AAC1CJ,EAAAA,UAAU,CAACK,IAAX,CAAgBC,MAAhB;AACD;;AACD;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AAAM;AACN,MAAMC,KAAK,GAAGC,WAAW,CAACV,YAAD,EAAeW,eAAe,CAAC,GAAGT,UAAJ,CAA9B,CAAzB;AAEA,eAAeO,KAAf","sourcesContent":["\r\nimport { getAllProductsReducer, getProductByIdReducer, addProductReviewReducer, deleteProductReducer, addProductReducer, updateProductReducer } from \"../reducers/productReducer\";\r\n{/*import { cartReducer } from \"../reducers/cartReducer\"\r\nimport { registerNewUserReducer, loginReducer, getAllUsersReducer, deleteUserReducer } from \"../reducers/userReducer\";\r\nimport { getOrdersByUserIdReducer, placeOrderReducer, getAllOrdersReducer } from \"../reducers/orderReducer\" */}\r\n//import rootReducer from \"../reducers/rootReducer\"\r\n\r\n\r\nconst finalReducer = combineReducers({\r\n  getAllProductsReducer: getAllProductsReducer,\r\n  getProductByIdReducer: getProductByIdReducer,\r\n // cartReducer : cartReducer,\r\n  //registerNewUserReducer : registerNewUserReducer,\r\n  //loginReducer : loginReducer,\r\n  //placeOrderReducer : placeOrderReducer,\r\n  //getOrdersByUserIdReducer : getOrdersByUserIdReducer,\r\n  //addProductReviewReducer : addProductReviewReducer,\r\n  //getAllUsersReducer : getAllUsersReducer,\r\n  //deleteUserReducer : deleteUserReducer,\r\n  deleteProductReducer : deleteProductReducer,\r\n  addProductReducer : addProductReducer,\r\n  updateProductReducer : updateProductReducer,\r\n  //getAllOrdersReducer : getAllOrdersReducer\r\n})\r\n\r\n{ /*const cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null */}\r\n\r\nconst middleware = [thunk];\r\nif (process.env.NODE_ENV === \"developement\"){\r\n  middleware.push(logger)\r\n}\r\n{/*const initialState = {\r\n  cartReducer: {cartItems : cartItems},\r\n  loginReducer : { currentUser : currentUser} \r\n}\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  // Specify here name, actionsBlacklist, actionsCreators and other options\r\n});*/}\r\nconst store = createStore(finalReducer, applyMiddleware(...middleware));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}
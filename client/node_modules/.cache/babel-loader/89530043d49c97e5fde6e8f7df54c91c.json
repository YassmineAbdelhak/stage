{"ast":null,"code":"import axios from \"axios\";\nexport const placeOrder = (token, subtotal) => (dispatch, getState) => {\n  const currentUser = getState().loginReducer.currentUser;\n  const demoItems = getState().cartReducer.cartItems;\n  const cartItems = new Array();\n\n  for (var i = 0; i < demoItems.length; i++) {\n    var item = {\n      name: demoItems[i].name,\n      quantity: demoItems[i].quantity,\n      price: demoItems[i].price,\n      _id: demoItems[i]._id\n    };\n    cartItems.push(item);\n  }\n\n  dispatch({\n    type: \"PLACE_ORDER_REQUEST\"\n  });\n  axios.post(\"/api/orders/placeorder\", {\n    token,\n    subtotal,\n    currentUser,\n    cartItems\n  }).then(res => {\n    dispatch({\n      type: \"PLACE_ORDER_SUCCESS\"\n    });\n    console.log(res);\n  }).catch(err => {\n    dispatch({\n      type: \"PLACE_ORDER_FAILED\"\n    });\n  });\n};\nexport const getOrdersByUserId = () => (dispatch, getState) => {\n  const userid = getState().loginReducer.currentUser._id;\n\n  dispatch({\n    type: \"GET_ORDERSBYUSERID_REQUEST\"\n  });\n  axios.post(\"/api/orders/getordersbyuserid\", {\n    userid: userid\n  }).then(res => {\n    dispatch({\n      type: \"GET_ORDERSBYUSERID_SUCCESS\",\n      payload: res.data\n    });\n    console.log(res.data);\n  }).catch(err => {\n    dispatch({\n      type: \"GET_ORDERSBYUSERID_FAILED\",\n      payload: err\n    });\n  });\n};\nexport const getAllOrders = () => (dispatch, getState) => {\n  dispatch({\n    type: \"GET_ALLORDERS_REQUEST\"\n  });\n  axios.get(\"/api/orders/getallorders\").then(res => {\n    dispatch({\n      type: \"GET_ALLORDERS_SUCCESS\",\n      payload: res.data\n    });\n    console.log(res.data);\n  }).catch(err => {\n    dispatch({\n      type: \"GET_ALLORDERS_FAILED\",\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/Chayma/Desktop/my-app/client/src/actions/orderAction.js"],"names":["axios","placeOrder","token","subtotal","dispatch","getState","currentUser","loginReducer","demoItems","cartReducer","cartItems","Array","i","length","item","name","quantity","price","_id","push","type","post","then","res","console","log","catch","err","getOrdersByUserId","userid","payload","data","getAllOrders","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const placeOrder = (token, subtotal) => (dispatch, getState) => {\r\n  const currentUser = getState().loginReducer.currentUser;\r\n  const demoItems = getState().cartReducer.cartItems;\r\n  const cartItems = new Array();\r\n\r\n  for (var i = 0; i < demoItems.length; i++) {\r\n    var item = {\r\n      name: demoItems[i].name,\r\n      quantity: demoItems[i].quantity,\r\n      price: demoItems[i].price,\r\n      _id: demoItems[i]._id,\r\n    };\r\n\r\n    cartItems.push(item);\r\n  }\r\n\r\n  dispatch({ type: \"PLACE_ORDER_REQUEST\" });\r\n\r\n  axios\r\n    .post(\"/api/orders/placeorder\", { token, subtotal, currentUser, cartItems })\r\n    .then((res) => {\r\n      dispatch({ type: \"PLACE_ORDER_SUCCESS\" });\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: \"PLACE_ORDER_FAILED\" });\r\n    });\r\n};\r\n\r\nexport const getOrdersByUserId = () => (dispatch, getState) => {\r\n  \r\n  const userid = getState().loginReducer.currentUser._id;\r\n\r\n  dispatch({ type: \"GET_ORDERSBYUSERID_REQUEST\" });\r\n  axios\r\n    .post(\"/api/orders/getordersbyuserid\", { userid: userid })\r\n    .then((res) => {\r\n      dispatch({ type: \"GET_ORDERSBYUSERID_SUCCESS\", payload: res.data });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: \"GET_ORDERSBYUSERID_FAILED\", payload: err });\r\n    });\r\n};\r\n\r\nexport const getAllOrders = () => (dispatch, getState) => {\r\n  \r\n\r\n\r\n  dispatch({ type: \"GET_ALLORDERS_REQUEST\" });\r\n  axios\r\n    .get(\"/api/orders/getallorders\")\r\n    .then((res) => {\r\n      dispatch({ type: \"GET_ALLORDERS_SUCCESS\", payload: res.data });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: \"GET_ALLORDERS_FAILED\", payload: err });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}